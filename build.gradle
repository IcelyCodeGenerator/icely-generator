/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

buildscript {
    ext {
        osgi_platform = 'win32.win32.x86_64'
        swt_version = '3.114.100'
    }

    //repositories {
    //	flatDir {
	//   		dirs 'amir/.m2/repository/p2/osgi/bundle'
	//	}
	//	mavenLocal()
	//    jcenter()
    //}

	//dependencies{
	//	classpath fileTree(dir: 'amir/.m2/repository/p2/osgi/bundle', include: ['**/**/*.jar'], exclude: [''])
	//}
}

plugins {
    id 'java'
    id 'java-library'
    id 'eclipse'
    id 'war'
    //id "org.epsilonlabs.core" version "1.5.1"
	//id "org.epsilonlabs.emf" version "1.5.1"
}

java {
    sourceCompatibility = JavaVersion.VERSION_12
    targetCompatibility = JavaVersion.VERSION_12
}

version = '1.1'

apply plugin: "eclipse"
apply plugin: "java"
//apply plugin: "org.epsilonlabs.core"
//apply plugin: "org.epsilonlabs.emf"


repositories {
    mavenCentral()
    //maven {
	//	url "https://plugins.gradle.org/m2/"
	//}
}

configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.$osgi_platform:$swt_version")
        }
    }
}

dependencies {
	compile group: 'org.eclipse.core', name: 'org.eclipse.core.runtime', version: '3.7.0'
	compile group: 'org.eclipse.core', name: 'org.eclipse.core.resources', version: '3.7.100'
	compile group: 'org.eclipse.core', name: 'commands', version: '3.3.0-I20070605-0010'
    compile "org.eclipse.platform:org.eclipse.swt:$swt_version"
    compile group: 'org.eclipse.platform', name: 'org.eclipse.jface', version: '3.21.0'
	compile group: 'org.eclipse.platform', name: 'org.eclipse.jface.databinding', version: '1.12.0'
	compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore.xmi', version: '2.16.0'
    compile group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore', version: '2.23.0'
    
    // compile group: 'org.eclipse.platform', name: 'org.eclipse.ui.workbench', version: '3.108.2'
    // compile group: 'net.java.dev.jna', name: 'jna', version: '4.5.2'
	// compile group: 'org.eclipse.platform', name: 'org.eclipse.ui.workbench', version: '3.120.0'
	compile group: 'org.apache.jena', name: 'apache-jena-libs', version: '3.16.0', ext: 'pom'
	compile group: 'org.apache.jena', name: 'jena', version: '3.16.0', ext: 'pom'
	compile group: 'org.apache.jena', name: 'jena-core', version: '3.16.0'
	compile group: 'org.apache.jena', name: 'jena-arq', version: '3.16.0'
	compile group: 'org.yaml', name: 'snakeyaml', version: '1.26'
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	compile group: 'org.slf4j', name:'slf4j-simple', version:'1.7.21'
}

sourceSets { 
	main.java.srcDir "src"
}


jar {
	from configurations.compile.collect { zipTree it} 
	manifest.attributes "Main-Class": "mde.MDEEngineStarter"
}

task executePIM(type:JavaExec) {
   main = "mde.MDEEngineStarter"
   classpath = sourceSets.main.runtimeClasspath
   args 'resources/m/CIM-LinkedModel.yaml'
}

//epsilon {
//	models {
//		servicePIM(EMF){
//			modelFile = file('resources/m/PIM-ServiceModel.model')
//			metamodelFile =  file('src/metamodels/PIM/ServicePIMMetamodel.ecore')
//		}
//		jdl(EMF){
//			modelFile = file('resources/m/PIM-JDLModel.model')
//			metamodelFile =  file('src/metamodels/PIM/JDLMetamodel.ecore')
//		}
//		servicePSM(EMF){
//			modelFile = file('resources/m/PSM-ServiceModel.model')
//			metamodelFile =  file('src/metamodels/PSM/ServicePSMMetamodel.ecore')
//		}
//	}
//}



//task servicePIM2jdl(type: ETL){
//	src = file('resources/mmt/m2m/ServicePIM2JDL.etl')
//	input = 'servicePIM'
//	output = 'jdl'
//}
//
//task servicePIM2servicePSM(type: ETL){
//	src = file('resources/mmt/m2m/ServicePIM2ServicePSM.etl')
//	input = 'servicePIM'
//	output = 'servicePSM'
//}
//task m2t(type: EGX) {
//	src = file('resources/mmt/m2t/main.egx')
	// outputRoot = file('src-gen')
	//input = 'servicePSM'
//}
//task workflow {
//	group = "mde"
//	dependsOn servicePIM2jdl,servicePIM2servicePSM,m2t
//}

// task executePIM2JDL(type:JavaExec) {
//    main = "mde.MDEEngineStarter"
//    classpath = sourceSets.main.runtimeClasspath
//    args 'resources/models/bookmarks.yaml'
// }